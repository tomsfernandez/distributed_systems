# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import catalog_pb2 as catalog__pb2
import empty_pb2 as empty__pb2
import product_pb2 as product__pb2


class CatalogStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetProduct = channel.unary_unary(
        '/store.Catalog/GetProduct',
        request_serializer=catalog__pb2.ProductRequest.SerializeToString,
        response_deserializer=product__pb2.Product.FromString,
        )
    self.GetProductBatch = channel.unary_unary(
        '/store.Catalog/GetProductBatch',
        request_serializer=catalog__pb2.BatchProductRequest.SerializeToString,
        response_deserializer=product__pb2.ProductList.FromString,
        )
    self.GetAllProducts = channel.unary_unary(
        '/store.Catalog/GetAllProducts',
        request_serializer=empty__pb2.Empty.SerializeToString,
        response_deserializer=product__pb2.ProductList.FromString,
        )


class CatalogServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetProduct(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetProductBatch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllProducts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CatalogServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetProduct': grpc.unary_unary_rpc_method_handler(
          servicer.GetProduct,
          request_deserializer=catalog__pb2.ProductRequest.FromString,
          response_serializer=product__pb2.Product.SerializeToString,
      ),
      'GetProductBatch': grpc.unary_unary_rpc_method_handler(
          servicer.GetProductBatch,
          request_deserializer=catalog__pb2.BatchProductRequest.FromString,
          response_serializer=product__pb2.ProductList.SerializeToString,
      ),
      'GetAllProducts': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllProducts,
          request_deserializer=empty__pb2.Empty.FromString,
          response_serializer=product__pb2.ProductList.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'store.Catalog', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
