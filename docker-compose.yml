version: '3'

services:
  catalog_api:
    image: catalog_api
    build:
      context: catalog
      dockerfile: Dockerfile
    depends_on:
      - mongo
      - etcd
    ports:
      - "50051:50051"
    networks:
      store_net:
        ipv4_address: 172.28.1.1
    environment:
      HOST: 172.28.1.1
      PORT: 50051
      ETCD_HOST: 172.28.4.1
      ETCD_PORT: 2379
      MONGO_HOST: 172.28.3.1
      MONGO_PORT: 27017
      MONGO_DB: catalog
      MONGO_COLLECTION: products

  favorites_api:
    image: favorites_api
    build:
      context: favorites
      dockerfile: Dockerfile
    depends_on:
      - mongo
      - etcd
    ports:
      - "50052:50051"
    networks:
      store_net:
        ipv4_address: 172.28.2.1
    environment:
      HOST: 172.28.2.1
      PORT: 50051
      MONGO_HOST: 172.28.3.1
      MONGO_PORT: 27017
      MONGO_DB: favorites
      ETCD_HOST: 172.28.4.1
      ETCD_PORT: 2379

  users_api:
    image: users_api
    build:
      context: users
      dockerfile: Dockerfile
    depends_on:
      - mongo
      - etcd
    ports:
      - "50053:50051"
    networks:
      store_net:
        ipv4_address: 172.28.3.1
    environment:
      HOST: 172.28.3.1
      PORT: 50051
      MONGO_HOST: 172.28.5.1
      MONGO_PORT: 27017
      MONGO_DB: favorites
      ETCD_HOST: 172.28.4.1
      ETCD_PORT: 2379

  etcd:
    image: bitnami/etcd:latest
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://172.28.4.1:2379
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      store_net:
        ipv4_address: 172.28.4.1

  mongo:
    image: mongo:4.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      store_net:
        ipv4_address: 172.28.5.1

volumes:
  mongo_data:
    external:
      name: mongo_data
  etcd_data:
    external:
      name: etcd_data

networks:
  store_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16